package lbjgen;

import java.util.List;
import structure.*;
import parser.*;
import lbj.*;

discrete% CompleteFeatures(Expression expr) <- {
    for (int i = 0; i < expr.features.size(); i++) {
	sense expr.features.get(i);
    }
}

discrete CompleteLabel(Expression expr) <- { return expr.complete; }

discrete CompleteClassifier(Expression expr) <-
learn CompleteLabel
  using CompleteFeatures
  from new CompleteParser(0.0, 0.8)
  50 rounds

  with SparseNetworkLearner {
     SparseAveragedPerceptron.Parameters p =
     new SparseAveragedPerceptron.Parameters();
     p.learningRate = .1;
     p.thickness = 2;
     baseLTU = new SparseAveragedPerceptron(p);
  }

  testFrom new CompleteParser(0.8, 1.0)
		
  progressOutput 2000

end